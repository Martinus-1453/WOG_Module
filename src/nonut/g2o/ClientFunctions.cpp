#include "ClientFunctions.h"

namespace nonut::g2o
{
	ClientFunctions* ClientFunctions::instance = nullptr;

	ClientFunctions::ClientFunctions() :
		FUNCTION_CTOR(print),
		FUNCTION_CTOR(chatInputClear),
		FUNCTION_CTOR(chatInputClose),
		FUNCTION_CTOR(chatInputGetFont),
		FUNCTION_CTOR(chatInputGetText),
		FUNCTION_CTOR(chatInputIsOpen),
		FUNCTION_CTOR(chatInputOpen),
		FUNCTION_CTOR(chatInputSend),
		FUNCTION_CTOR(chatInputSetFont),
		FUNCTION_CTOR(chatInputSetPosition),
		FUNCTION_CTOR(chatInputSetText),
		FUNCTION_CTOR(clearMultiplayerMessages),
		FUNCTION_CTOR(enableEvent_Render),
		FUNCTION_CTOR(enableEvent_RenderFocus),
		FUNCTION_CTOR(enable_DamageAnims),
		FUNCTION_CTOR(enable_NicknameId),
		FUNCTION_CTOR(enable_WeaponTrail),
		FUNCTION_CTOR(exitGame),
		FUNCTION_CTOR(getDayLength),
		FUNCTION_CTOR(getFpsRate),
		FUNCTION_CTOR(getLODStrengthModifier),
		FUNCTION_CTOR(getLODStrengthOverride),
		FUNCTION_CTOR(getSightFactor),
		FUNCTION_CTOR(playVideo),
		FUNCTION_CTOR(setBloodMode),
		FUNCTION_CTOR(setDayLength),
		FUNCTION_CTOR(setLODStrengthModifier),
		FUNCTION_CTOR(setLODStrengthOverride),
		FUNCTION_CTOR(setSightFactor),
		FUNCTION_CTOR(setTime),
		FUNCTION_CTOR(showPlayerStatus),
		FUNCTION_CTOR(switchInterpolation),
		FUNCTION_CTOR(fileMd5),
		FUNCTION_CTOR(getExp),
		FUNCTION_CTOR(getFocusNpc),
		FUNCTION_CTOR(getGuildId),
		FUNCTION_CTOR(getGuildName),
		FUNCTION_CTOR(getLearnPoints),
		FUNCTION_CTOR(getLevel),
		FUNCTION_CTOR(getNextLevelExp),
		FUNCTION_CTOR(getPingLimit),
		FUNCTION_CTOR(isFrozen),
		FUNCTION_CTOR(isInWater),
		FUNCTION_CTOR(setExp),
		FUNCTION_CTOR(setFreeze),
		FUNCTION_CTOR(setGuild),
		FUNCTION_CTOR(setLearnPoints),
		FUNCTION_CTOR(setLevel),
		FUNCTION_CTOR(setNextLevelExp),
		FUNCTION_CTOR(setPingLimit),
		FUNCTION_CTOR(disableControls),
		FUNCTION_CTOR(disableKey),
		FUNCTION_CTOR(disableLogicalKey),
		FUNCTION_CTOR(enableKeys),
		FUNCTION_CTOR(getKeyLayout),
		FUNCTION_CTOR(getKeyLetter),
		FUNCTION_CTOR(isControlsDisabled),
		FUNCTION_CTOR(isKeyDisabled),
		FUNCTION_CTOR(isKeyPressed),
		FUNCTION_CTOR(isKeyToggled),
		FUNCTION_CTOR(isKeysEnabled),
		FUNCTION_CTOR(isLogicalKeyDisabled),
		FUNCTION_CTOR(isLogicalKeyPressed),
		FUNCTION_CTOR(isMouseBtnPressed),
		FUNCTION_CTOR(resetLogicalKeys),
		FUNCTION_CTOR(saveLogicalKeys),
		FUNCTION_CTOR(setClipboardText),
		FUNCTION_CTOR(setKeyLayout),
		FUNCTION_CTOR(anx),
		FUNCTION_CTOR(any),
		FUNCTION_CTOR(getCursorSensitivity),
		FUNCTION_CTOR(getCursorTxt),
		FUNCTION_CTOR(getHudMode),
		FUNCTION_CTOR(isConsoleOpen),
		FUNCTION_CTOR(isCursorVisible),
		FUNCTION_CTOR(letterDistance),
		FUNCTION_CTOR(letterHeight),
		FUNCTION_CTOR(letterHeightPx),
		FUNCTION_CTOR(letterWidth),
		FUNCTION_CTOR(letterWidthPx),
		FUNCTION_CTOR(nax),
		FUNCTION_CTOR(nay),
		FUNCTION_CTOR(setBarPosition),
		FUNCTION_CTOR(setBarSize),
		FUNCTION_CTOR(setCursorPosition),
		FUNCTION_CTOR(setCursorPositionPx),
		FUNCTION_CTOR(setCursorSensitivity),
		FUNCTION_CTOR(setCursorSize),
		FUNCTION_CTOR(setCursorSizePx),
		FUNCTION_CTOR(setCursorTxt),
		FUNCTION_CTOR(setCursorVisible),
		FUNCTION_CTOR(setHudMode),
		FUNCTION_CTOR(setResolution),
		FUNCTION_CTOR(textGetFont),
		FUNCTION_CTOR(textSetFont),
		FUNCTION_CTOR(textWidth),
		FUNCTION_CTOR(textWidthPx),
		FUNCTION_CTOR(clearInventory),
		FUNCTION_CTOR(closeInventory),
		FUNCTION_CTOR(getCurrentInventorySlot),
		FUNCTION_CTOR(hasItem),
		FUNCTION_CTOR(isInventoryOpen),
		FUNCTION_CTOR(openInventory),
		FUNCTION_CTOR(getItemDescription),
		FUNCTION_CTOR(getItemName),
		FUNCTION_CTOR(getItemValue),
		FUNCTION_CTOR(disableMusicSystem),
		FUNCTION_CTOR(getMusicVolume),
		FUNCTION_CTOR(getSoundVolume),
		FUNCTION_CTOR(isMusicSystemDisabled),
		FUNCTION_CTOR(setMusicVolume),
		FUNCTION_CTOR(setSoundVolume),
		FUNCTION_CTOR(createNpc),
		FUNCTION_CTOR(destroyNpc),
		FUNCTION_CTOR(spawnNpc),
		FUNCTION_CTOR(unspawnNpc),
		FUNCTION_CTOR(addEffect),
		FUNCTION_CTOR(applyPlayerOverlay),
		FUNCTION_CTOR(attackPlayer),
		FUNCTION_CTOR(attackPlayerMagic),
		FUNCTION_CTOR(attackPlayerRanged),
		FUNCTION_CTOR(attackPlayerWithEffect),
		FUNCTION_CTOR(drawWeapon),
		FUNCTION_CTOR(equipArmor),
		FUNCTION_CTOR(equipHelmet),
		FUNCTION_CTOR(equipItem),
		FUNCTION_CTOR(equipMeleeWeapon),
		FUNCTION_CTOR(equipShield),
		FUNCTION_CTOR(getActFrame),
		FUNCTION_CTOR(getFaceAniName),
		FUNCTION_CTOR(getLastHitAniFrame),
		FUNCTION_CTOR(getPlayerAmulet),
		FUNCTION_CTOR(getPlayerAngle),
		FUNCTION_CTOR(getPlayerAni),
		FUNCTION_CTOR(getPlayerAniId),
		FUNCTION_CTOR(getPlayerAniIdByName),
		FUNCTION_CTOR(getPlayerAniNameById),
		FUNCTION_CTOR(getPlayerArmor),
		FUNCTION_CTOR(getPlayerBelt),
		FUNCTION_CTOR(getPlayerCollision),
		FUNCTION_CTOR(getPlayerDexterity),
		FUNCTION_CTOR(getPlayerFatness),
		FUNCTION_CTOR(getPlayerHealth),
		FUNCTION_CTOR(getPlayerHelmet),
		FUNCTION_CTOR(getPlayerInstance),
		FUNCTION_CTOR(getPlayerMagicLevel),
		FUNCTION_CTOR(getPlayerMana),
		FUNCTION_CTOR(getPlayerMaxHealth),
		FUNCTION_CTOR(getPlayerMaxMana),
		FUNCTION_CTOR(getPlayerMeleeWeapon),
		FUNCTION_CTOR(getPlayerName),
		FUNCTION_CTOR(getPlayerPing),
		FUNCTION_CTOR(getPlayerProtection),
		FUNCTION_CTOR(getPlayerRangedWeapon),
		FUNCTION_CTOR(getPlayerReadiedWeapon),
		FUNCTION_CTOR(getPlayerRing),
		FUNCTION_CTOR(getPlayerShield),
		FUNCTION_CTOR(getPlayerSkillWeapon),
		FUNCTION_CTOR(getPlayerSpell),
		FUNCTION_CTOR(getPlayerStrength),
		FUNCTION_CTOR(getPlayerTalent),
		FUNCTION_CTOR(getPlayerType),
		FUNCTION_CTOR(getPlayerVisualAlpha),
		FUNCTION_CTOR(getPlayerWeaponMode),
		FUNCTION_CTOR(giveItem),
		FUNCTION_CTOR(hitPlayer),
		FUNCTION_CTOR(isPlayerCreated),
		FUNCTION_CTOR(isPlayerDead),
		FUNCTION_CTOR(isPlayerInWater),
		FUNCTION_CTOR(isPlayerStreamed),
		FUNCTION_CTOR(isPlayerUnconscious),
		FUNCTION_CTOR(playAni),
		FUNCTION_CTOR(playAniId),
		FUNCTION_CTOR(playGesticulation),
		FUNCTION_CTOR(readySpell),
		FUNCTION_CTOR(removeEffect),
		FUNCTION_CTOR(removeItem),
		FUNCTION_CTOR(removePlayerOverlay),
		FUNCTION_CTOR(removeWeapon),
		FUNCTION_CTOR(setPlayerAngle),
		FUNCTION_CTOR(setPlayerCollision),
		FUNCTION_CTOR(setPlayerColor),
		FUNCTION_CTOR(setPlayerDexterity),
		FUNCTION_CTOR(setPlayerFatness),
		FUNCTION_CTOR(setPlayerHealth),
		FUNCTION_CTOR(setPlayerInstance),
		FUNCTION_CTOR(setPlayerMagicLevel),
		FUNCTION_CTOR(setPlayerMana),
		FUNCTION_CTOR(setPlayerMaxHealth),
		FUNCTION_CTOR(setPlayerMaxMana),
		FUNCTION_CTOR(setPlayerName),
		FUNCTION_CTOR(setPlayerOnFloor),
		FUNCTION_CTOR(setPlayerPosition),
		FUNCTION_CTOR(setPlayerScale),
		FUNCTION_CTOR(setPlayerSkillWeapon),
		FUNCTION_CTOR(setPlayerStrength),
		FUNCTION_CTOR(setPlayerTalent),
		FUNCTION_CTOR(setPlayerVisual),
		FUNCTION_CTOR(setPlayerVisualAlpha),
		FUNCTION_CTOR(setPlayerWeaponMode),
		FUNCTION_CTOR(startFaceAni),
		FUNCTION_CTOR(stopAni),
		FUNCTION_CTOR(stopAniId),
		FUNCTION_CTOR(stopFaceAni),
		FUNCTION_CTOR(unequipArmor),
		FUNCTION_CTOR(unequipHelmet),
		FUNCTION_CTOR(unequipItem),
		FUNCTION_CTOR(unequipMeleeWeapon),
		FUNCTION_CTOR(unequipRangedWeapon),
		FUNCTION_CTOR(unequipShield),
		FUNCTION_CTOR(unreadySpell),
		FUNCTION_CTOR(useClosestMob),
		FUNCTION_CTOR(useItem),
		FUNCTION_CTOR(changeWorld),
		FUNCTION_CTOR(getWorld)
	{
	}

	ClientFunctions* ClientFunctions::get_instance()
	{
		if (instance == nullptr)
		{
			instance = new ClientFunctions();
		}
		return instance;
	}
}
