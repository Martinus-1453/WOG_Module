// Supported with union (c) 2018-2022 Union team
// Licence: GNU General Public License

#ifndef __ZINPUT_CONST__VER3__
#define __ZINPUT_CONST__VER3__

enum
{
	KEY_ESCAPE = 0x01,
	KEY_1 = 0x02,
	KEY_2 = 0x03,
	KEY_3 = 0x04,
	KEY_4 = 0x05,
	KEY_5 = 0x06,
	KEY_6 = 0x07,
	KEY_7 = 0x08,
	KEY_8 = 0x09,
	KEY_9 = 0x0A,
	KEY_0 = 0x0B,
	KEY_MINUS = 0x0C,
	KEY_EQUALS = 0x0D,
	KEY_BACK = 0x0E,
	KEY_TAB = 0x0F,
	KEY_Q = 0x10,
	KEY_W = 0x11,
	KEY_E = 0x12,
	KEY_R = 0x13,
	KEY_T = 0x14,
	KEY_Y = 0x15,
	KEY_U = 0x16,
	KEY_I = 0x17,
	KEY_O = 0x18,
	KEY_P = 0x19,
	KEY_LBRACKET = 0x1A,
	KEY_RBRACKET = 0x1B,
	KEY_RETURN = 0x1C,
	KEY_LCONTROL = 0x1D,
	KEY_A = 0x1E,
	KEY_S = 0x1F,
	KEY_D = 0x20,
	KEY_F = 0x21,
	KEY_G = 0x22,
	KEY_H = 0x23,
	KEY_J = 0x24,
	KEY_K = 0x25,
	KEY_L = 0x26,
	KEY_SEMICOLON = 0x27,
	KEY_APOSTROPHE = 0x28,
	KEY_GRAVE = 0x29,
	KEY_LSHIFT = 0x2A,
	KEY_BACKSLASH = 0x2B,
	KEY_Z = 0x2C,
	KEY_X = 0x2D,
	KEY_C = 0x2E,
	KEY_V = 0x2F,
	KEY_B = 0x30,
	KEY_N = 0x31,
	KEY_M = 0x32,
	KEY_COMMA = 0x33,
	KEY_PERIOD = 0x34,
	KEY_SLASH = 0x35,
	KEY_RSHIFT = 0x36,
	KEY_MULTIPLY = 0x37,
	KEY_LMENU = 0x38,
	KEY_SPACE = 0x39,
	KEY_CAPITAL = 0x3A,
	KEY_F1 = 0x3B,
	KEY_F2 = 0x3C,
	KEY_F3 = 0x3D,
	KEY_F4 = 0x3E,
	KEY_F5 = 0x3F,
	KEY_F6 = 0x40,
	KEY_F7 = 0x41,
	KEY_F8 = 0x42,
	KEY_F9 = 0x43,
	KEY_F10 = 0x44,
	KEY_NUMLOCK = 0x45,
	KEY_SCROLL = 0x46,
	KEY_NUMPAD7 = 0x47,
	KEY_NUMPAD8 = 0x48,
	KEY_NUMPAD9 = 0x49,
	KEY_SUBTRACT = 0x4A,
	KEY_NUMPAD4 = 0x4B,
	KEY_NUMPAD5 = 0x4C,
	KEY_NUMPAD6 = 0x4D,
	KEY_ADD = 0x4E,
	KEY_NUMPAD1 = 0x4F,
	KEY_NUMPAD2 = 0x50,
	KEY_NUMPAD3 = 0x51,
	KEY_NUMPAD0 = 0x52,
	KEY_DECIMAL = 0x53,
	KEY_OEM_102 = 0x56,
	KEY_F11 = 0x57,
	KEY_F12 = 0x58,
	KEY_F13 = 0x64,
	KEY_F14 = 0x65,
	KEY_F15 = 0x66,
	KEY_KANA = 0x70,
	KEY_ABNT_C1 = 0x73,
	KEY_CONVERT = 0x79,
	KEY_NOCONVERT = 0x7B,
	KEY_YEN = 0x7D,
	KEY_ABNT_C2 = 0x7E,
	KEY_NUMPADEQUALS = 0x8D,
	KEY_PREVTRACK = 0x90,
	KEY_AT = 0x91,
	KEY_COLON = 0x92,
	KEY_UNDERLINE = 0x93,
	KEY_KANJI = 0x94,
	KEY_STOP = 0x95,
	KEY_AX = 0x96,
	KEY_UNLABELED = 0x97,
	KEY_NEXTTRACK = 0x99,
	KEY_NUMPADENTER = 0x9C,
	KEY_RCONTROL = 0x9D,
	KEY_MUTE = 0xA0,
	KEY_CALCULATOR = 0xA1,
	KEY_PLAYPAUSE = 0xA2,
	KEY_MEDIASTOP = 0xA4,
	KEY_VOLUMEDOWN = 0xAE,
	KEY_VOLUMEUP = 0xB0,
	KEY_WEBHOME = 0xB2,
	KEY_NUMPADCOMMA = 0xB3,
	KEY_DIVIDE = 0xB5,
	KEY_SYSRQ = 0xB7,
	KEY_RMENU = 0xB8,
	KEY_PAUSE = 0xC5,
	KEY_HOME = 0xC7,
	KEY_UP = 0xC8,
	KEY_PRIOR = 0xC9,
	KEY_LEFT = 0xCB,
	KEY_RIGHT = 0xCD,
	KEY_END = 0xCF,
	KEY_DOWN = 0xD0,
	KEY_NEXT = 0xD1,
	KEY_INSERT = 0xD2,
	KEY_DELETE = 0xD3,
	KEY_LWIN = 0xDB,
	KEY_RWIN = 0xDC,
	KEY_APPS = 0xDD,
	KEY_POWER = 0xDE,
	KEY_SLEEP = 0xDF,
	KEY_WAKE = 0xE3,
	KEY_WEBSEARCH = 0xE5,
	KEY_WEBFAVORITES = 0xE6,
	KEY_WEBREFRESH = 0xE7,
	KEY_WEBSTOP = 0xE8,
	KEY_WEBFORWARD = 0xE9,
	KEY_WEBBACK = 0xEA,
	KEY_MYCOMPUTER = 0xEB,
	KEY_MAIL = 0xEC,
	KEY_MEDIASELECT = 0xED,

	KEY_BACKSPACE = KEY_BACK,
	KEY_NUMPADSTAR = KEY_MULTIPLY,
	KEY_LALT = KEY_LMENU,
	KEY_CAPSLOCK = KEY_CAPITAL,
	KEY_NUMPADMINUS = KEY_SUBTRACT,
	KEY_NUMPADPLUS = KEY_ADD,
	KEY_NUMPADPERIOD = KEY_DECIMAL,
	KEY_NUMPADSLASH = KEY_DIVIDE,
	KEY_RALT = KEY_RMENU,
	KEY_UPARROW = KEY_UP,
	KEY_PGUP = KEY_PRIOR,
	KEY_LEFTARROW = KEY_LEFT,
	KEY_RIGHTARROW = KEY_RIGHT,
	KEY_DOWNARROW = KEY_DOWN,
	KEY_PGDN = KEY_NEXT,

	KEY_CIRCUMFLEX = KEY_PREVTRACK,

	MAX_KEYS = 512,
	MAX_KEYS_AND_CODES = 515,
	KEY_NOT_HERE = (MAX_KEYS_AND_CODES + 1),
	KEY_RELEASE = 0x8000,

	GAME_LEFT = 1,
	GAME_RIGHT = 2,
	GAME_UP = 3,
	GAME_DOWN = 4,
	GAME_ACTION = 5,
	GAME_SLOW = 6,
	GAME_ACTION2 = 7,
	GAME_WEAPON = 8,
	GAME_SMOVE = 11,
	GAME_SMOVE2 = 12,
	GAME_SHIFT = 13,
	GAME_END = 14,
	GAME_INVENTORY = 15,
	GAME_LOOK = 16,
	GAME_SNEAK = 17,
	GAME_STRAFELEFT = 18,
	GAME_STRAFERIGHT = 19,
	GAME_SCREEN_STATUS = 20,
	GAME_SCREEN_LOG = 21,
	GAME_SCREEN_MAP = 22,
	GAME_LOOK_FP = 23,
	GAME_LOCK_TARGET = 24,
	GAME_PARADE = 25,
	GAME_ACTIONLEFT = 26,
	GAME_ACTIONRIGHT = 27,
	GAME_LAME_POTION = 28,
	GAME_LAME_HEAL = 29,

	MIN_MOUSE_BTNS_AND_CODES = (KEY_NOT_HERE),

	MOUSE_DX = (MIN_MOUSE_BTNS_AND_CODES + 0),
	MOUSE_DY = (MIN_MOUSE_BTNS_AND_CODES + 1),
	MOUSE_UP = (MIN_MOUSE_BTNS_AND_CODES + 2),
	MOUSE_DOWN = (MIN_MOUSE_BTNS_AND_CODES + 3),
	MOUSE_LEFT = (MIN_MOUSE_BTNS_AND_CODES + 4),
	MOUSE_RIGHT = (MIN_MOUSE_BTNS_AND_CODES + 5),
	MOUSE_WHEELUP = (MIN_MOUSE_BTNS_AND_CODES + 6),
	MOUSE_WHEELDOWN = (MIN_MOUSE_BTNS_AND_CODES + 7),
	MOUSE_BUTTONLEFT = (MIN_MOUSE_BTNS_AND_CODES + 8),
	MOUSE_BUTTONRIGHT = (MIN_MOUSE_BTNS_AND_CODES + 9),
	MOUSE_BUTTONMID = (MIN_MOUSE_BTNS_AND_CODES + 10),
	MOUSE_XBUTTON1 = (MIN_MOUSE_BTNS_AND_CODES + 11),
	MOUSE_XBUTTON2 = (MIN_MOUSE_BTNS_AND_CODES + 12),
	MOUSE_XBUTTON3 = (MIN_MOUSE_BTNS_AND_CODES + 13),
	MOUSE_XBUTTON4 = (MIN_MOUSE_BTNS_AND_CODES + 14),
	MOUSE_XBUTTON5 = (MIN_MOUSE_BTNS_AND_CODES + 15),

	MAX_MOUSE_BTNS_AND_CODES = (MOUSE_XBUTTON5 + 1),
	MIN_MOUSE_BTNS = (MOUSE_WHEELUP),
	MAX_MOUSE_BTNS = (MOUSE_XBUTTON5 + 1),
	MIN_JOY_BTNS_AND_CODES = (MAX_MOUSE_BTNS_AND_CODES),

	JOY_LEFT = (MIN_JOY_BTNS_AND_CODES + 0),
	JOY_RIGHT = (MIN_JOY_BTNS_AND_CODES + 1),
	JOY_UP = (MIN_JOY_BTNS_AND_CODES + 2),
	JOY_DOWN = (MIN_JOY_BTNS_AND_CODES + 3),
	THROTTLE_UP = (MIN_JOY_BTNS_AND_CODES + 4),
	THROTTLE_DOWN = (MIN_JOY_BTNS_AND_CODES + 5),
	RUDDER_LEFT = (MIN_JOY_BTNS_AND_CODES + 6),
	RUDDER_RIGHT = (MIN_JOY_BTNS_AND_CODES + 7),
	JOY_POV_LEFT = (MIN_JOY_BTNS_AND_CODES + 8),
	JOY_POV_RIGHT = (MIN_JOY_BTNS_AND_CODES + 9),
	JOY_POV_UP = (MIN_JOY_BTNS_AND_CODES + 10),
	JOY_POV_DOWN = (MIN_JOY_BTNS_AND_CODES + 11),
	JOY_BUTTON_1 = (MIN_JOY_BTNS_AND_CODES + 12),
	JOY_BUTTON_2 = (MIN_JOY_BTNS_AND_CODES + 13),
	JOY_BUTTON_3 = (MIN_JOY_BTNS_AND_CODES + 14),
	JOY_BUTTON_4 = (MIN_JOY_BTNS_AND_CODES + 15),
	JOY_BUTTON_5 = (MIN_JOY_BTNS_AND_CODES + 16),
	JOY_BUTTON_6 = (MIN_JOY_BTNS_AND_CODES + 17),
	JOY_BUTTON_7 = (MIN_JOY_BTNS_AND_CODES + 18),
	JOY_BUTTON_8 = (MIN_JOY_BTNS_AND_CODES + 19),
	JOY_BUTTON_9 = (MIN_JOY_BTNS_AND_CODES + 20),
	JOY_BUTTON_10 = (MIN_JOY_BTNS_AND_CODES + 21),
	JOY_BUTTON_11 = (MIN_JOY_BTNS_AND_CODES + 22),
	JOY_BUTTON_12 = (MIN_JOY_BTNS_AND_CODES + 23),
	JOY_BUTTON_13 = (MIN_JOY_BTNS_AND_CODES + 24),
	JOY_BUTTON_14 = (MIN_JOY_BTNS_AND_CODES + 25),
	JOY_BUTTON_15 = (MIN_JOY_BTNS_AND_CODES + 26),
	JOY_BUTTON_16 = (MIN_JOY_BTNS_AND_CODES + 27),
	JOY_BUTTON_17 = (MIN_JOY_BTNS_AND_CODES + 28),
	JOY_BUTTON_18 = (MIN_JOY_BTNS_AND_CODES + 29),
	JOY_BUTTON_19 = (MIN_JOY_BTNS_AND_CODES + 30),
	JOY_BUTTON_20 = (MIN_JOY_BTNS_AND_CODES + 31),
	JOY_BUTTON_21 = (MIN_JOY_BTNS_AND_CODES + 32),
	JOY_BUTTON_22 = (MIN_JOY_BTNS_AND_CODES + 33),
	JOY_BUTTON_23 = (MIN_JOY_BTNS_AND_CODES + 34),
	JOY_BUTTON_24 = (MIN_JOY_BTNS_AND_CODES + 35),
	JOY_BUTTON_25 = (MIN_JOY_BTNS_AND_CODES + 36),
	JOY_BUTTON_26 = (MIN_JOY_BTNS_AND_CODES + 37),
	JOY_BUTTON_27 = (MIN_JOY_BTNS_AND_CODES + 38),
	JOY_BUTTON_28 = (MIN_JOY_BTNS_AND_CODES + 39),
	JOY_BUTTON_29 = (MIN_JOY_BTNS_AND_CODES + 40),
	JOY_BUTTON_30 = (MIN_JOY_BTNS_AND_CODES + 41),
	JOY_BUTTON_31 = (MIN_JOY_BTNS_AND_CODES + 42),
	JOY_BUTTON_32 = (MIN_JOY_BTNS_AND_CODES + 43),
};

enum zTLogicalKey
{
	zLOGICKEY_NULL = 0x00,
	zLOGICKEY_LEFT = 0x01,
	zLOGICKEY_RIGHT = 0x02,
	zLOGICKEY_UP = 0x03,
	zLOGICKEY_DOWN = 0x04,
	zLOGICKEY_ACTION = 0x05,
	zLOGICKEY_SLOW = 0x06,
	zLOGICKEY_WEAPON = 0x08,
	zLOGICKEY_SMOVE = 0x0B,
	zLOGICKEY_END = 0x0E,
	zLOGICKEY_INVENTORY = 0x0F,
	zLOGICKEY_LOOK = 0x10,
	zLOGICKEY_SNEAK = 0x11,
	zLOGICKEY_STRAFELEFT = 0x12,
	zLOGICKEY_STRAFERIGHT = 0x13,
	zLOGICKEY_SCREEN_STATUS = 0x14,
	zLOGICKEY_SCREEN_LOG = 0x15,
	zLOGICKEY_SCREEN_MAP = 0x16,
	zLOGICKEY_LOOK_FP = 0x17,
	zLOGICKEY_LOCK_TARGET = 0x18,
	zLOGICKEY_PARADE = 0x19,
	zLOGICKEY_ACTIONLEFT = 0x1A,
	zLOGICKEY_ACTIONRIGHT = 0x1B,
	zLOGICKEY_LAME_POTION = 0x1C,
	zLOGICKEY_LAME_HEAL = 0x1D
};


#endif // __ZINPUT_CONST__VER3__